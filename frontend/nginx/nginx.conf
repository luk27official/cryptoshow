{{SSL_REDIRECT}}

server {
    listen 80;
    server_name frontend;

    root /usr/share/nginx/html;
    index index.html;

    # maintenance mode if needed
    if (-f /usr/share/nginx/html/maintenance.flag) {
        return 503;
    }

    error_page 503 /maintenance.html;
    location = /maintenance.html {
        root /usr/share/nginx/html;
        internal;
    }

    location / {
        try_files $uri $uri/ /index.html;
    }

    error_page 404 /index.html;

    # proxy API requests to the backend (FastAPI running on port 5000)
    location /api/ {
        proxy_pass http://backend:5000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 1000s;
        proxy_send_timeout 1000s;
        proxy_read_timeout 1000s;
    }

    location /ws/ {
        proxy_pass http://backend:5000/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400s;
    }

    # explicit MIME types for Chrome...
    location ~* \.m?js$ {
        types { application/javascript js mjs; }
        add_header Content-Type application/javascript;
        add_header Access-Control-Allow-Origin *;
    }

    location ~* \.css$ {
        add_header Content-Type text/css;
    }

    location ~* \.wasm$ {
        add_header Content-Type application/wasm;
    }

    location ~* \.html$ {
        add_header Content-Type text/html;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
    }

    location ~* \.json$ {
        add_header Content-Type application/json;
    }
}

{{SSL_BLOCK}}
