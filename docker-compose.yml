services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-full}
    volumes:
      - ./data:/app/data
      - ./cache/torch:/home/cryptoshow/.cache/torch/hub/checkpoints
      - ./cache/cryptobench:/app/cryptobench
      - ./cache/cryptobench-small:/app/cryptobench-small
    ports:
      - "5000:5000"
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
      - ENABLE_EXTERNAL_SSL_REQUESTS=${ENABLE_EXTERNAL_SSL_REQUESTS:-true}
    working_dir: /app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker-gpu:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      target: common
    command: /app/.venv/bin/celery -A tasks.celery_app worker --loglevel=info -E
    volumes:
      - ./data:/app/data
      - ./cache/torch:/home/cryptoshow/.cache/torch/hub/checkpoints
      - ./cache/cryptobench:/app/cryptobench
      - ./cache/cryptobench-small:/app/cryptobench-small
    depends_on:
      - redis
      - backend
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
      - NVIDIA_DISABLE_REQUIRE=true
      - ENABLE_EXTERNAL_SSL_REQUESTS=${ENABLE_EXTERNAL_SSL_REQUESTS:-true}
      # - TF_GPU_ALLOCATOR=cuda_malloc_async
      # - TF_FORCE_GPU_ALLOW_GROWTH=true
      # - TF_USE_LEGACY_KERAS=1
    working_dir: /app
    profiles:
      - gpu
    healthcheck:
      test: ["CMD", "/app/.venv/bin/celery", "-A", "tasks.celery_app", "inspect", "ping", "-d", "celery@worker-gpu"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker-cpu:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      target: common
    command: /app/.venv/bin/celery -A tasks.celery_app worker --loglevel=info -E
    volumes:
      - ./data:/app/data
      - ./cache/torch:/home/cryptoshow/.cache/torch/hub/checkpoints
      - ./cache/cryptobench:/app/cryptobench
      - ./cache/cryptobench-small:/app/cryptobench-small
    depends_on:
      - redis
      - backend
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
      - ENABLE_EXTERNAL_SSL_REQUESTS=${ENABLE_EXTERNAL_SSL_REQUESTS:-true}
    working_dir: /app
    profiles:
      - cpu
    healthcheck:
      test: ["CMD", "/app/.venv/bin/celery", "-A", "tasks.celery_app", "inspect", "ping", "-d", "celery@worker-cpu"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  frontend:
    build: ./frontend
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${SSL_CERT_PATH:-./frontend/ssl/dev.crt}:/etc/nginx/ssl/cert:ro
      - ${SSL_KEY_PATH:-./frontend/ssl/dev.key}:/etc/nginx/ssl/key:ro
    environment:
      - ENABLE_SSL=${ENABLE_SSL:-true}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: common
    command: /app/.venv/bin/celery -A tasks.celery_app flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - ENABLE_EXTERNAL_SSL_REQUESTS=${ENABLE_EXTERNAL_SSL_REQUESTS:-true}
    profiles:
      - monitoring
    volumes:
      - ./data:/app/data
      - ./cache/torch:/home/cryptoshow/.cache/torch/hub/checkpoints
      - ./cache/cryptobench:/app/cryptobench
      - ./cache/cryptobench-small:/app/cryptobench-small
    working_dir: /app
    depends_on:
      - redis
      - backend

  celery-exporter:
    image: ghcr.io/danihodovic/celery-exporter:latest
    environment:
      - CE_BROKER_URL=redis://redis:6379/0
    profiles:
      - monitoring
    ports:
      - "9808:9808"
    depends_on:
      - flower

  prometheus:
    image: prom/prometheus
    profiles:
      - monitoring
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3001:3001"
  #   profiles:
  #     - monitoring
  #   volumes:
  #     - ./data/grafana:/var/lib/grafana
  #     - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
  #     - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
  #   environment:
  #     - GF_SERVER_HTTP_PORT=3001
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   user: "${UID:-1000}:${GID:-1000}"
  #   depends_on:
  #     - prometheus
